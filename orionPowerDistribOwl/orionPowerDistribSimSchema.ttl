# baseURI: http://example.org/orionPowerDistribution/simSchema
# imports: http://example.org/orionPowerDistribution/sysmlSchema

@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix simSchema:  <http://example.org/orionPowerDistribution/simSchema#> .
@prefix sysML:   <http://example.org/orionPowerDistribution/sysmlSchema#> .
@prefix xml:     <http://www.w3.org/XML/1998/namespace> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

<http://example.org/orionPowerDistribution/simSchema>
      rdf:type owl:Ontology ;
      rdfs:comment "Ontology describing the interface to a design simulator." ;
      owl:imports <http://example.org/orionPowerDistribution/sysmlSchema> .

simSchema:AttributeSet
      rdf:type owl:Class ;
      rdfs:comment "A set of SysML attributes." ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:allValuesFrom sysML:Attribute ;
                owl:onProperty simSchema:contains
              ] .

simSchema:Computation
      rdf:type owl:Class ;
      rdfs:comment """Represents the simulated computation of the value of a SysML attribute. Identifies the computed value through the property \"produces\", and one or more attribute sets through the property \"uses\".

Each \"used\"  attribute set represents a set of leaf nodes in the functional computation tree: specifically, those leaf nodes that are used as arguments within a lowest-level operation.

This representation elides the actual tree of operations, as this kind of information is usually better represented within a simulation engine. But it provides enough detail to allow us to represent a replacement of the input values with other values, which is one form of rationale for overriding what would otherwise be a constraint violation.

Multiple computations may share the same \"produced\" sysML attribute. Thus, a specific sysML attribute may have alternative computations defined for it. This is how we override a constraint violation: the rationale for the override becomes an alternative way to compute the value whose constraint has apparently been violated.

The priority of the computation tells a simulation engine whether to use this computation or an alternative one that produces the same attribute. A computation with a higher priority value takes precedence over one with a lower priority value.""" ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:allValuesFrom simSchema:AttributeSet ;
                owl:onProperty simSchema:uses
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:allValuesFrom sysML:Attribute ;
                owl:onProperty simSchema:produces
              ] .

simSchema:contains
      rdf:type owl:ObjectProperty .

simSchema:hasPriority
      rdf:type owl:DatatypeProperty ;
      rdfs:range xsd:integer .

simSchema:produces
      rdf:type owl:ObjectProperty .

simSchema:uses
      rdf:type owl:ObjectProperty .
